# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Warpin OpenUpgrade migration

on:
  push:
    branches: ["12.0-warpin"]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      ODOO: "./odoo-bin"
      PGPASSWORD: ${{ secrets.DB_PASSWORD }}
      PGHOST: ${{ secrets.DB_HOST }}
      PGUSER: ${{ secrets.DB_PORT }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Wait / Sleep
        uses: jakejarvis/wait-action@v0.1.0
        with:
          time: '10s'
      - uses: actions/checkout@v2
      - name: Configuration
        run: |
          sudo apt update
          sudo apt install libldap2-dev nodejs libxml2-dev libxslt1-dev libevent-dev libsasl2-dev expect unixodbc-dev expect-dev python-lxml python-simplejson python-serial python-yaml python-passlib python-psycopg2 python-werkzeug
          pip install coveralls
      - name: Requirements Installation
        run: |
          sudo npm install -g less less-plugin-clean-css
          pip install -q -r requirements.txt
          # don't use pypi's openupgradelib, but the one from source to avoid choking
          # on unreleased features in openupgradelib
          pip install --ignore-installed git+https://github.com/OCA/openupgradelib.git@master
          # select modules and perform the upgrade
      - name: OpenUpgrade test
        run: |
          coverage run $ODOO --database=$DB --update=$MODULES_NEW --db_host=$DB_HOST --db_port=$DB_PORT --db_port=$DB_PORT --db_password=$DB_PASSWORD --db_user=$DB_USERNAME --stop-after-init